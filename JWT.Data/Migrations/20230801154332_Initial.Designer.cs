// <auto-generated />
using System;
using JWT.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JWT.Data.Migrations
{
    [DbContext(typeof(JwtDbContext))]
    [Migration("20230801154332_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JWT.Domain.Models.Enterprise", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("ID");

                    b.Property<long>("CreatedTime")
                        .HasColumnType("bigint")
                        .HasColumnName("CREATED_TIME");

                    b.Property<string>("EnterpriseCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ENTERPRISE_CODE");

                    b.Property<string>("EnterpriseName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ENTERPRISE_NAME");

                    b.Property<long?>("FoundationDate")
                        .HasColumnType("bigint")
                        .HasColumnName("FOUNDATION_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETE");

                    b.Property<long>("ModifiedTime")
                        .HasColumnType("bigint")
                        .HasColumnName("MODIFIED_TIME");

                    b.HasKey("Id");

                    b.ToTable("ENTERPRISE");
                });

            modelBuilder.Entity("JWT.Domain.Models.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("ID");

                    b.Property<long>("CreatedTime")
                        .HasColumnType("bigint")
                        .HasColumnName("CREATED_TIME");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETE");

                    b.Property<long>("ModifiedTime")
                        .HasColumnType("bigint")
                        .HasColumnName("MODIFIED_TIME");

                    b.Property<string>("RoleCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ROLE_CODE");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ROLE_NAME");

                    b.HasKey("Id");

                    b.ToTable("ROLE");
                });

            modelBuilder.Entity("JWT.Domain.Models.RoleUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("ID");

                    b.Property<long>("CreatedTime")
                        .HasColumnType("bigint")
                        .HasColumnName("CREATED_TIME");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETE");

                    b.Property<long>("ModifiedTime")
                        .HasColumnType("bigint")
                        .HasColumnName("MODIFIED_TIME");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ROLE_ID");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USER_ID");

                    b.HasKey("Id");

                    b.ToTable("ROLE_USER");
                });

            modelBuilder.Entity("JWT.Domain.Models.UserInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("ID");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ADDRESS");

                    b.Property<long>("CreatedTime")
                        .HasColumnType("bigint")
                        .HasColumnName("CREATED_TIME");

                    b.Property<long?>("DateOfBirth")
                        .HasColumnType("bigint")
                        .HasColumnName("DATE_OF_BIRTH");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("EnterpriseId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("ENTERPRISE_ID");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FULLNAME");

                    b.Property<string>("HashedPassword")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HASHED_PASSWORD");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit")
                        .HasColumnName("IS_DELETE");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("bit")
                        .HasColumnName("IS_EMAIL_CONFIRMED");

                    b.Property<long>("ModifiedTime")
                        .HasColumnType("bigint")
                        .HasColumnName("MODIFIED_TIME");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PHONE_NUMBER");

                    b.Property<string>("SecurityKey")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SECURITY_KEY");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USER_NAME");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.ToTable("USER_INFO");
                });

            modelBuilder.Entity("JWT.Domain.Models.UserInfo", b =>
                {
                    b.HasOne("JWT.Domain.Models.Enterprise", "EnterpriseOfUser")
                        .WithMany("Employees")
                        .HasForeignKey("EnterpriseId");

                    b.Navigation("EnterpriseOfUser");
                });

            modelBuilder.Entity("JWT.Domain.Models.Enterprise", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
